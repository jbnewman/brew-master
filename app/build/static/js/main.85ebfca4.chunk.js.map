{"version":3,"sources":["components/Nav.jsx","pages/Home.jsx","pages/About.jsx","pages/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["LoginButton","props","authenticated","react_default","a","createElement","Link","to","className","Nav","state","this","getAuthenticated","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Home","Redirect","About","Login","_this","placeholder","required","autofocus","onClick","setAuthenticated","App","localStorage","getItem","auth","setItem","setState","_this2","BrowserRouter","Fragment","components_Nav","Switch","Route","exact","path","component","pages_Home","pages_About","pages_Login","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.85ebfca4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LoginButton(props) {\r\n  if (!props.authenticated) {\r\n    return (\r\n      <Link to=\"/login\" className=\"nav-link\">\r\n        Login\r\n      </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <Link to=\"/logout\" className=\"nav-link\">\r\n        Logout\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nclass Nav extends Component {\r\n  state = {};\r\n  render() {\r\n    if (!this.props.getAuthenticated()) {\r\n      return \"\";\r\n    }\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          Brew Master\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarColor01\"\r\n          aria-controls=\"navbarColor01\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <LoginButton authenticated={this.props.getAuthenticated()} />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n  render() {\r\n    if (!this.props.getAuthenticated()) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Home</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass About extends Component {\r\n  state = {};\r\n  render() {\r\n    if (!this.props.getAuthenticated()) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>About</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/signin.css\";\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <form className=\"form-signin\">\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Email address\"\r\n            required\r\n            autofocus\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            id=\"inputPassword\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n\r\n          <button\r\n            className=\"btn btn-lg btn-primary btn-block\"\r\n            type=\"button\"\r\n            onClick={() => this.props.setAuthenticated(true)}\r\n          >\r\n            Sign in\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport \"../node_modules/bootswatch/dist/sandstone/bootstrap.min.css\";\r\n\r\n//Nav\r\nimport Nav from \"./components/Nav\";\r\n\r\n//Pages\r\nimport Home from \"./pages/Home\";\r\nimport About from \"./pages/About\";\r\nimport Login from \"./pages/Login\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    authenticated: localStorage.getItem(\"authenticated\") === \"true\" || false\r\n  };\r\n\r\n  setAuthenticated = auth => {\r\n    localStorage.setItem(\"authenticated\", auth);\r\n    this.setState({ authenticated: auth }, () => {});\r\n  };\r\n\r\n  getAuthenticated = () => {\r\n    return this.state.authenticated;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <React.Fragment>\r\n          <Nav getAuthenticated={this.getAuthenticated} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              component={() => {\r\n                return <Home getAuthenticated={this.getAuthenticated} />;\r\n              }}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/about\"\r\n              component={() => {\r\n                return <About getAuthenticated={this.getAuthenticated} />;\r\n              }}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/login\"\r\n              component={() => {\r\n                if (this.getAuthenticated()) {\r\n                  return <Redirect to=\"/\" />;\r\n                }\r\n                return <Login setAuthenticated={this.setAuthenticated} />;\r\n              }}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/logout\"\r\n              component={() => {\r\n                this.setAuthenticated(false);\r\n                return <Redirect to=\"/login\" />;\r\n              }}\r\n            />\r\n          </Switch>\r\n        </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}